version: '3.8'
services:
  api:
    image: docker-java-jar
    ports:
      - '8888:8888'
    environment:
      - SERVER_PORT= 8888
      - SPRING_DATASOURCE_URL= jdbc:postgresql://db/postgres
      - SPRING_BOOTSTRAP_SERVERS= kafka:9092
    depends_on:
      - db
      - kafka
  ui:
    image: docker-react
    ports:
      - '3006:3005'
    volumes:
      - ./ui/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ui/public/index.html:/usr/share/nginx/html/index.html
      - ./ui/public/css:/usr/share/nginx/html/css
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres
    ports:
      - "5555:5432"
    volumes:
      - ./backend/src/main/resources/migrations/01.000.00/changelog-01.sql:/docker-entrypoint-initdb.d/changelog-01.sql
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
